<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpav_1_1_resource_pool" kind="class" language="C++" prot="public">
    <compoundname>pav::ResourcePool</compoundname>
    <includes refid="resource__pool_8h" local="no">resource_pool.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpav_1_1_resource_pool_1a69bd8a1062bfa8cf6b2743b59270388d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; unsigned int, std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="structpav_1_1_i_resource_base" kindref="compound">IResourceBase</ref> &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;unsigned int, std::unordered_map&lt;std::string, std::shared_ptr&lt;IResourceBase&gt; &gt; &gt; pav::ResourcePool::resource_map_</definition>
        <argsstring></argsstring>
        <name>resource_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="21" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpav_1_1_resource_pool_1a1629d6c5732398ae30c4589cd0d6fbe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pav::ResourcePool::AddToPool</definition>
        <argsstring>(std::string &amp;&amp;name, std::shared_ptr&lt; IResourceBase &gt; &amp;&amp;resource)</argsstring>
        <name>AddToPool</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="structpav_1_1_i_resource_base" kindref="compound">IResourceBase</ref> &gt; &amp;&amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Add a temporary resource to the manager pool. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will move the parameter resource and therefore should only be used with rvalues or values client do not wish to continue using in the near future lines of code. If you wish to use resource after adding it to the resource manager pool please refer to the function void <ref refid="classpav_1_1_resource_pool_1a6a55ac2a4f8cfdf23999241a4bd791f6" kindref="member">AddToPool(std::string&amp;&amp; name, const std::shared_ptr&lt;IResourceBase&gt;&amp; resource)</ref></para>
<para><simplesect kind="author"><para>Jaymie </para>
</simplesect>
<simplesect kind="date"><para>2/21/2019</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resource</parametername>
</parameternamelist>
<parameterdescription>
<para>The resource. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="41" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.cpp" bodystart="4" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classpav_1_1_resource_pool_1a6a55ac2a4f8cfdf23999241a4bd791f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pav::ResourcePool::AddToPool</definition>
        <argsstring>(std::string &amp;&amp;name, const std::shared_ptr&lt; IResourceBase &gt; &amp;resource)</argsstring>
        <name>AddToPool</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="structpav_1_1_i_resource_base" kindref="compound">IResourceBase</ref> &gt; &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Add a resource to the manager pool. </para>
        </briefdescription>
        <detaileddescription>
<para>This function copies the resource parameter and increments its reference count by one. Therefore it should only be used on lvalues. For adding a temporary resource to the manager pool please refer to void void <ref refid="classpav_1_1_resource_pool_1a1629d6c5732398ae30c4589cd0d6fbe8" kindref="member">AddToPool(std::string&amp;&amp; name, std::shared_ptr&lt;IResourceBase&gt;&amp;&amp; resource)</ref></para>
<para><simplesect kind="author"><para>Jaymie </para>
</simplesect>
<simplesect kind="date"><para>2/21/2019</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>The resource. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="58" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.cpp" bodystart="17" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classpav_1_1_resource_pool_1a718da8a7067d17e9e85d015375004acd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ResourceType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; ResourceType &gt;</type>
        <definition>template&lt; typename ResourceType &gt; inline std::shared_ptr&lt; ResourceType &gt; pav::ResourcePool::GetSharedResource</definition>
        <argsstring>(std::string &amp;&amp;name)</argsstring>
        <name>GetSharedResource</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the shared resource of type ResourceType. </para>
        </briefdescription>
        <detaileddescription>
<para>Shared resource returns a shared pointer to the resource and therefore will increments the resource count.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ResourceType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the resource wrapper. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The shared resource if succeed, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="74" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" bodystart="74" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classpav_1_1_resource_pool_1a373470bded6813b62274a1715161d86e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ResourceType</type>
          </param>
        </templateparamlist>
        <type>std::weak_ptr&lt; ResourceType &gt;</type>
        <definition>template&lt; typename ResourceType &gt; inline std::weak_ptr&lt; ResourceType &gt; pav::ResourcePool::GetWeakResource</definition>
        <argsstring>(std::string &amp;&amp;name)</argsstring>
        <name>GetWeakResource</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the weak resource of type ResourceType. </para>
        </briefdescription>
        <detaileddescription>
<para>Weak resource returns a weak pointer to the resource and therefore will not increase the resource count. However, you should always check the validity of the resource before using one.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ResourceType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the resource wrapper. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The weak resource if succeed, NULL otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="103" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" bodystart="103" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A resource pool. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jaymie </para>
</simplesect>
<simplesect kind="date"><para>2/19/2019 </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" line="19" column="1" bodyfile="E:/MyProgram/School/Humber/Semester4/C++/ProjectAlteracValley/CoreGame/engine/core/resource_system/resource_pool.h" bodystart="18" bodyend="117"/>
    <listofallmembers>
      <member refid="classpav_1_1_resource_pool_1a1629d6c5732398ae30c4589cd0d6fbe8" prot="public" virt="non-virtual"><scope>pav::ResourcePool</scope><name>AddToPool</name></member>
      <member refid="classpav_1_1_resource_pool_1a6a55ac2a4f8cfdf23999241a4bd791f6" prot="public" virt="non-virtual"><scope>pav::ResourcePool</scope><name>AddToPool</name></member>
      <member refid="classpav_1_1_resource_pool_1a718da8a7067d17e9e85d015375004acd" prot="public" virt="non-virtual"><scope>pav::ResourcePool</scope><name>GetSharedResource</name></member>
      <member refid="classpav_1_1_resource_pool_1a373470bded6813b62274a1715161d86e" prot="public" virt="non-virtual"><scope>pav::ResourcePool</scope><name>GetWeakResource</name></member>
      <member refid="classpav_1_1_resource_pool_1a69bd8a1062bfa8cf6b2743b59270388d" prot="private" virt="non-virtual"><scope>pav::ResourcePool</scope><name>resource_map_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
