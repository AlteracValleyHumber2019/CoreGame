Start point:
Main Method is located in example_main
Makes a reference to Engine (engine)
Sets the window info and initializes the engine
Adds an example scene and switches to that scene

Initialize Engine:
Initialize the RenderManager, WindowManager, SceneManager, EventManager
Sets the EventAttorney to a new EventAttorney (event_attorney)
Injects events...
on_input, on_key_down, on_key_hold, on_key_up, on_mouse_button_down, on_mouse_button_up... These make it possible to handle different input methods
Setup the Engine Events
Create a Window

Initialize RenderManager:
Virtual Function needs to be overridden

Initialize WindowManager:
Empty

Initialize SceneManager:
Empty

Initialize EventManager:
Empty

Setup Engine Events:
Sets the local EventAttorney to the ref passed in

Create Window:
Creates the window and sets it as the context


GameObject Manager:
RemoveGameObject -- Finds the GameObject by name, removes the children and then removes that object
Update -- Updates each of the gameobjects by calling each gameobject's update
SetupEngineEvents -- Sets the local EventAttorney to the ref passed in

GameObject:
name, guid, parent, order (Not sure what order is/does)
Update -- Updates each component that is on the gameobject

ComponentManager:
SetupEngineEvents -- Sets the local EventAttorney to the ref passed in

Component:
guid, order, owner
GetOwner -- returns the owner
SetActive -- Sets the active bool to the bool passed
SetIgnoreAutoUpdate -- Sets the active bool to the bool passed

TransformComponent:
GetPosition -- Returns the position Vector
GetRotation -- Returns the rotation Vector
GetScale -- Returns the Scale Vector
SetPosition -- Sets the position Vector to the passed Vector
SetRotation -- Sets the rotation Vector to the passed Vector
SetScale -- Sets the Scale Vector to the passed Vector
Begin, End, Update, SetupEngineEvents -- Empty

Resource:
guid
getGuid -- returns guid...





